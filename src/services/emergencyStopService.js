const axios = require('axios');
const config = require('../config/appConfig');

/**
 * D√©clenche un arr√™t d'urgence sur l'API cible
 * @returns {Promise<object>} R√©sultat de l'op√©ration
 */
async function triggerEmergencyStop() {
  try {
    // Extraire l'URL de base √† partir de l'URL compl√®te de l'API
    const targetUrl = config.TARGET_API_URL;
    const baseUrl = new URL(targetUrl).origin;
    const emergencyEndpoint = `${baseUrl}/emergency-stop`;
    
    console.log(`üö® D√©clenchement de l'arr√™t d'urgence sur ${emergencyEndpoint}...`);
    
    const response = await axios.post(emergencyEndpoint, {
      timestamp: new Date().toISOString(),
      source: 'svg_api'
    }, { 
      timeout: config.API_REQUEST_TIMEOUT 
    });
    
    console.log(`‚úÖ Arr√™t d'urgence envoy√© avec succ√®s √† l'API cible`);
    return {
      success: true,
      message: 'Arr√™t d\'urgence envoy√© avec succ√®s',
      data: response.data
    };
  } catch (error) {
    console.error(`‚ùå Erreur lors de l'envoi de l'arr√™t d'urgence: ${error.message}`);
    
    if (error.code === 'ECONNREFUSED') {
      console.error(`L'API cible n'est pas accessible √† l'adresse configur√©e.`);
    } else if (error.code === 'ETIMEDOUT') {
      console.error(`La connexion √† l'API cible a expir√©.`);
    }
    
    return {
      success: false,
      message: `Impossible d'envoyer l'arr√™t d'urgence: ${error.message}`,
      error: error
    };
  }
}

module.exports = {
  triggerEmergencyStop
}; 